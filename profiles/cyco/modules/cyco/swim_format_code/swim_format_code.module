<?php
/**
 * @file
 * SWIM plugin to format code. 
 * Params: starting line number.
 */

/**
 * Implements hook_help().
 */
function swim_format_code_help($path, $arg) {
  switch ($path) {
    case 'admin/help#swim_format_code':
      return '<p>' . t('Format code (HTML, PHP... Syntax:') . '</p>'
          . '<p><code>@@cyco format-code STARTING_LINE_NUMBER [LANG-name]</code></p>'
          . '<p>' . t('Examples:') . '</p>' 
          . '<p><code>@@cyco format-code 1</code></p>'
          . '<p><code>@@cyco format-code 23</code></p>'
          . '<p><code>@@cyco format-code 1 lang-vb</code></p>'
          . '<p>More at <a href="https://code.google.com/p/google-code-prettify/">https://code.google.com/p/google-code-prettify/</a>.</p>'
          ;
  }
}

/**
 * Implements hook_swim_custom_tag_view_info().
 */
function swim_format_code_swim_custom_tag_view_info() {
  return array(
    'tag' => 'format-code',
    'callback' => '_swim_format_code_swim_callback',
  );
}

/**
 * Callback to generate HTML to show the code.
 * @param string $param_string Parameters passed to the tag.
 * @param string $tag_content Code to format.
 */
function _swim_format_code_swim_callback( $param_string, $tag_content ) {
  $param_string = trim($param_string);
  $start_line_num = -1;
  if ( $param_string ) {
    $params = explode(' ', $param_string);
    foreach( $params as $param ) {
      if (is_numeric($param) ) {
        $start_line_num = $param;
      }
    }
  }
  $markup = '<ol class="swim-code"' 
      . ( ($start_line_num == -1) ? '' : (' start="' . $start_line_num . '"') )
      . '>' . PHP_EOL;
  $tag_content = str_replace("\r", '', $tag_content);
  //Remove zero-width spaces. They show up when pasting text from
  //Excel's VBE. (OK, this is a slimy hack.)
  $tag_content = str_replace("&#8203;", '', $tag_content);
  $content_lines = explode("\n", $tag_content);
  $content_lines_last_index = sizeof( $content_lines ) - 1;
  foreach( $content_lines as $index => $line ) {
    //Skip the last line if it's MT.
    if ( $index == $content_lines_last_index && trim($line) == '' ) {
      continue;
    }
    $line = str_replace(' ', '&nbsp;', $line);
    $line = str_replace('<', '&lt;', $line);
    $line = str_replace('>', '&gt;', $line);
    //Replace markers with highlighting spans.
    $line = str_replace('&gt;&gt;&gt;&gt;', '<span class="swim-code-emph3">', $line);
    $line = str_replace('&lt;&lt;&lt;&lt;', '</span>', $line);
    $line = str_replace('&gt;&gt;&gt;', '<span class="swim-code-emph2">', $line);
    $line = str_replace('&lt;&lt;&lt;', '</span>', $line);
    $line = str_replace('&gt;&gt;', '<span class="swim-code-emph1">', $line);
    $line = str_replace('&lt;&lt;', '</span>', $line);
    $markup .= '<li>' . $line . '</li>' . PHP_EOL;
  }
  $markup .= '</ol>' . PHP_EOL;
  //Shelve it, so Textile doesn't know about it.
  $marker = swim_shelve($markup);
  return $marker;
}

/**
 * Implements hook_swim_peek_load_css().
 * 
 * Return CSS file to show code in peek.
 */
function swim_format_code_swim_peek_load_css() {
  global $base_url;
  $result = array(
    $base_url . base_path() . drupal_get_path('module', 'swim_format_code') 
      . '/css/swim_format_code.css',
  );
  return $result;
}



